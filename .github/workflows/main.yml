name: Run Tests and Build Docker Compose

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v4

      - name: Install dependencies
        run: pnpm install

      - name: Run Vitest tests
        run: pnpm run test -- --coverage

      - name: Upload coverage report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/

  docker-build:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install -y docker-compose
      - name: Create dummy .docker.env
        run: |
          echo "DATABASE_URL=postgres://forumuser:forumpassword@db:5432/forum" > .docker.env
          echo "NEXT_PUBLIC_API_URL=http://localhost:3000" >> .docker.env
      - name: Create dummy .env
        run: |
          echo "DATABASE_URL=postgres://forumuser:forumpassword@db:5432/forum" > .env
          echo "NEXT_PUBLIC_API_URL=http://localhost:3000" >> .env

      - name: Build Docker Compose services
        run: docker-compose build

      - name: Run Docker Compose
        run: docker-compose up -d

      - name: Check app health
        run: |
          sleep 20
          curl --fail http://localhost:3000 || exit 1

      - name: Stop Docker Compose
        if: always()
        run: docker-compose down